name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    # 빌드만 수행 (테스트 제외)
    - name: Build with Gradle
      run: ./gradlew build -x test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Production
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          echo "🚀 배포 시작"
          cd ~/testproject/backend
          git checkout main
          git pull origin main
          
          # Docker 이미지 빌드
          docker build -t pd-test-backend:latest .
          
          # 서비스 재시작
          cd ~/testproject
          docker-compose stop backend
          docker-compose rm -f backend
          docker-compose up -d backend
          
          # 헬스체크
          sleep 10
          if curl -f http://localhost:8080; then
            echo "✅ Backend 배포 성공!"
          else
            echo "❌ Backend 배포 실패!"
            exit 1
          fi
